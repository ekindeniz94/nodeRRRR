name: Build, Package, Release (release.yml.yaml)
description: Build and release a Docker image for multi-architecture (AMD64/ARM64) with semantic release.
'on':
  release:
    types:
      - created
  push:
    branches:
      - main
env:
  VERSION: 0.0.1
  MO_DOCKERFILE: Dockerfile
  MO_DOCKERCONTEXT: .
  MO_REGISTRY_AUTH_URL: https://ghcr.io
  MO_REGISTRY_URL: ghcr.io/ekindeniz94
  MO_IMAGE_NAME: image-ekindeniz94-noderrrr-main
  MO_API_KIND: workspace
  MO_API_TOKEN_EXPIRES_AT__EB8A6B7425C6C568C169: '2299-06-07T09:31:30.000Z'
  MO_SERVICE__EB8A6B7425C6C568C169: H4sIAAAAAAAAA12MQW7DIBQF7/LWoBjb2MjrbrrpHT7wiSzbYAFO1US5e5WkyqJ6u3mauSHlM8X5SnVO8dNjQqN9cJqcdNoZ2fcqSBPCIO2oB6O6Vg3GQcCtR6mcn0pwuldMo7QtNbK3QyOJ3CiNt5a7ttWt7yDwnfJSdnL8RRtjwra8BoHMJR3ZMaYbljk+oh+8r+ln41ghEF+Gf7PyB589TIDAOadjxwTa93K6KAhcOJc5xcd9fzdi8rxS5VL/JTwHOtaK+y806gDuFQEAAA==
jobs:
  build-image:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Check out code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: get semversion
        run: |
          VERSION=$(git describe --tags $(git rev-list --tags --max-count=1))
          echo "VERSION=$VERSION" >> $GITHUB_ENV
      - name: Get last commit hash
        id: lastHash
        run: |
          LAST_HASH=$(git rev-parse --short HEAD)
          echo "LAST_HASH=$LAST_HASH" >> $GITHUB_ENV
      - id: containerRegistryLogin
        name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.MO_REGISTRY_AUTH_URL }}
          username: ${{ secrets.MO_REGISTRY_USER__RELEASE_YML }}
          password: ${{ secrets.MO_REGISTRY_PAT__RELEASE_YML }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push multi-arch image
        id: buildAndPushImage
        uses: docker/build-push-action@v6
        with:
          context: ${{ env.MO_DOCKERCONTEXT }}
          file: ${{ env.MO_DOCKERFILE }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.MO_REGISTRY_URL }}/${{ env.MO_IMAGE_NAME }}:${{ env.VERSION }}
            ${{ env.MO_REGISTRY_URL }}/${{ env.MO_IMAGE_NAME }}:latest
            ${{ env.MO_REGISTRY_URL }}/${{ env.MO_IMAGE_NAME }}:${{ env.LAST_HASH }}
          build-args: VERSION=${{ env.VERSION }}
      - id: releaseWithMogenius-EB8A6B7425C6C568C169
        name: Release with mogenius
        uses: mogenius/mogenius-release-action@v1
        with:
          dev: true
          image: ${{ env.MO_REGISTRY_URL }}/${{ env.MO_IMAGE_NAME }}:${{ env.VERSION }}
          kind: Deployment
          namespace: default
          resourceName: nodelatest
          containerName: nodelatest
          keyKind: ${{ env.MO_API_KIND }}
          token: bearer ${{ secrets.MO_API_TOKEN__EB8A6B7425C6C568C169__RELEASE_YML }}
